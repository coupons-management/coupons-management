<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gopher.system.dao.mysql.CpOutSiteStoreDAO">
    <resultMap id="BaseResultMap"
               type="com.gopher.system.model.entity.CpOutSiteStore">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="OUT_ID" jdbcType="INTEGER" property="outId"/>
        <result column="STORE_ID" jdbcType="INTEGER" property="storeId"/>
        <result column="CREATE_USER" jdbcType="INTEGER"
                property="createUser"/>
        <result column="UPDATE_USER" jdbcType="INTEGER"
                property="updateUser"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP"
                property="createTime"/>
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP"
                property="updateTime"/>
        <result column="STORE_COUNT" jdbcType="INTEGER"
                property="storeCount"/>
        <result column="COUPON_COUNT" jdbcType="INTEGER"
                property="couponCount"/>
        <result column="AD_ADDRESS" jdbcType="VARCHAR"
                property="adAddress"/>
        <result column="MARK" jdbcType="VARCHAR" property="mark"/>
        <result column="IS_MANUAL" jdbcType="VARCHAR"
                property="isManual"/>
        <result column="TITLE" jdbcType="VARCHAR" property="title"/>
        <result column="KEYWORDS" jdbcType="VARCHAR"
                property="keywords"/>
        <result column="DES" jdbcType="VARCHAR" property="des"/>
        <result column="SHOW_NAME" jdbcType="VARCHAR"
                property="showName"/>
        <result column="STORE_DES" jdbcType="VARCHAR"
                property="storeDes"/>
        <result column="HEADER_DES" jdbcType="VARCHAR"
                property="headerDes"/>
        <result column="HOT_SORT" jdbcType="INTEGER" property="hotSort"/>
        <result column="ADVISE_SORT" jdbcType="INTEGER"
                property="adviseSort"/>
        <result column="VISIT_COUNT" jdbcType="INTEGER"
                property="visitCount"/>
    </resultMap>
    <sql id="Base_Column_List">
		ID, OUT_ID, STORE_ID, CREATE_USER, UPDATE_USER,
		CREATE_TIME, UPDATE_TIME,
		STORE_COUNT,
		COUPON_COUNT, AD_ADDRESS, MARK,
		IS_MANUAL, TITLE, KEYWORDS, DES, SHOW_NAME,
		STORE_DES,
		HEADER_DES,
		HOT_SORT, ADVISE_SORT,VISIT_COUNT
	</sql>


    <resultMap id="BaseResultCountMap"
               type="com.gopher.system.model.entity.CpCoupon">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="STORE_ID" jdbcType="INTEGER" property="storeId"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="CODE" jdbcType="VARCHAR" property="code"/>
        <result column="EXPIRE_AT" jdbcType="TIMESTAMP"
                property="expireAt"/>
        <result column="STORE_WEBSITE_CRC" jdbcType="VARCHAR"
                property="storeWebsiteCrc"/>
        <result column="STORE_NAME_CRC" jdbcType="VARCHAR"
                property="storeNameCrc"/>
        <result column="IS_PASS" jdbcType="VARCHAR" property="isPass"/>
        <result column="FINAL_WEBSITE" jdbcType="VARCHAR"
                property="finalWebsite"/>
        <result column="STORE_WEBSITE" jdbcType="VARCHAR"
                property="storeWebsite"/>
        <result column="LINK" jdbcType="VARCHAR" property="link"/>
        <result column="IN_SITE_ID" jdbcType="INTEGER"
                property="inSiteId"/>
        <result column="INDEX" jdbcType="INTEGER" property="index"/>
        <result column="COUPON_TYPE" jdbcType="VARCHAR"
                property="couponType"/>
        <result column="IN_TYPE" jdbcType="VARCHAR" property="inType"/>
        <result column="CREATE_USER" jdbcType="INTEGER"
                property="createUser"/>
        <result column="UPDATE_USER" jdbcType="INTEGER"
                property="updateUser"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP"
                property="createTime"/>
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP"
                property="updateTime"/>
        <result column="SITE_URL" jdbcType="VARCHAR" property="siteUrl"/>
        <result column="STORE_URL" jdbcType="VARCHAR"
                property="storeUrl"/>
        <result column="SCRAPY" jdbcType="VARCHAR" property="scrapy"/>
        <result column="TITLE" jdbcType="VARCHAR" property="title"/>
        <result column="DES" jdbcType="VARCHAR" property="des"/>
    </resultMap>

    <sql id="BaseCount_Column_List">
		ID, STORE_ID, `NAME`, CODE, EXPIRE_AT, STORE_WEBSITE_CRC,
		STORE_NAME_CRC,
		IS_PASS,
		FINAL_WEBSITE, STORE_WEBSITE, LINK, IN_SITE_ID,
		`INDEX`, COUPON_TYPE, IN_TYPE,
		CREATE_USER,
		UPDATE_USER, CREATE_TIME,
		UPDATE_TIME, SITE_URL, STORE_URL, SCRAPY, TITLE, DES
	</sql>


    <select id="selectByPrimaryKey"
            parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CP_OUT_SITE_STORE
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey"
            parameterType="java.lang.Integer">
		delete from CP_OUT_SITE_STORE
		where ID =
		#{id,jdbcType=INTEGER}
	</delete>
    <insert id="insert" keyColumn="ID" keyProperty="id"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore"
            useGeneratedKeys="true">
		insert into CP_OUT_SITE_STORE (OUT_ID, STORE_ID,
		CREATE_USER,
		UPDATE_USER, CREATE_TIME, UPDATE_TIME,
		STORE_COUNT,
		COUPON_COUNT, AD_ADDRESS,
		MARK, IS_MANUAL, TITLE,
		KEYWORDS, DES,
		SHOW_NAME,
		STORE_DES, HEADER_DES, HOT_SORT,
		ADVISE_SORT)
		values
		(#{outId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER},
		#{createUser,jdbcType=INTEGER},
		#{updateUser,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
		#{storeCount,jdbcType=INTEGER}, #{couponCount,jdbcType=INTEGER},
		#{adAddress,jdbcType=VARCHAR},
		#{mark,jdbcType=VARCHAR},
		#{isManual,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
		#{keywords,jdbcType=VARCHAR}, #{des,jdbcType=VARCHAR},
		#{showName,jdbcType=VARCHAR},
		#{storeDes,jdbcType=VARCHAR},
		#{headerDes,jdbcType=VARCHAR}, #{hotSort,jdbcType=INTEGER},
		#{adviseSort,jdbcType=INTEGER})
	</insert>
    <insert id="insertSelective" keyColumn="ID" keyProperty="id"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore"
            useGeneratedKeys="true">
        insert into CP_OUT_SITE_STORE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="outId != null">
                OUT_ID,
            </if>
            <if test="storeId != null">
                STORE_ID,
            </if>
            <if test="createUser != null">
                CREATE_USER,
            </if>
            <if test="updateUser != null">
                UPDATE_USER,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
            <if test="storeCount != null">
                STORE_COUNT,
            </if>
            <if test="couponCount != null">
                COUPON_COUNT,
            </if>
            <if test="adAddress != null">
                AD_ADDRESS,
            </if>
            <if test="mark != null">
                MARK,
            </if>
            <if test="isManual != null">
                IS_MANUAL,
            </if>
            <if test="title != null">
                TITLE,
            </if>
            <if test="keywords != null">
                KEYWORDS,
            </if>
            <if test="des != null">
                DES,
            </if>
            <if test="showName != null">
                SHOW_NAME,
            </if>
            <if test="storeDes != null">
                STORE_DES,
            </if>
            <if test="headerDes != null">
                HEADER_DES,
            </if>
            <if test="hotSort != null">
                HOT_SORT,
            </if>
            <if test="adviseSort != null">
                ADVISE_SORT,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="outId != null">
                #{outId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="storeCount != null">
                #{storeCount,jdbcType=INTEGER},
            </if>
            <if test="couponCount != null">
                #{couponCount,jdbcType=INTEGER},
            </if>
            <if test="adAddress != null">
                #{adAddress,jdbcType=VARCHAR},
            </if>
            <if test="mark != null">
                #{mark,jdbcType=VARCHAR},
            </if>
            <if test="isManual != null">
                #{isManual,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="keywords != null">
                #{keywords,jdbcType=VARCHAR},
            </if>
            <if test="des != null">
                #{des,jdbcType=VARCHAR},
            </if>
            <if test="showName != null">
                #{showName,jdbcType=VARCHAR},
            </if>
            <if test="storeDes != null">
                #{storeDes,jdbcType=VARCHAR},
            </if>
            <if test="headerDes != null">
                #{headerDes,jdbcType=VARCHAR},
            </if>
            <if test="hotSort != null">
                #{hotSort,jdbcType=INTEGER},
            </if>
            <if test="adviseSort != null">
                #{adviseSort,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore">
        update CP_OUT_SITE_STORE
        <set>
            <if test="outId != null">
                OUT_ID = #{outId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                STORE_ID = #{storeId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                CREATE_USER = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateUser != null">
                UPDATE_USER = #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="storeCount != null">
                STORE_COUNT = #{storeCount,jdbcType=INTEGER},
            </if>
            <if test="couponCount != null">
                COUPON_COUNT = #{couponCount,jdbcType=INTEGER},
            </if>
            <if test="adAddress != null">
                AD_ADDRESS = #{adAddress,jdbcType=VARCHAR},
            </if>
            <if test="mark != null">
                MARK = #{mark,jdbcType=VARCHAR},
            </if>
            <if test="isManual != null">
                IS_MANUAL = #{isManual,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                TITLE = #{title,jdbcType=VARCHAR},
            </if>
            <if test="keywords != null">
                KEYWORDS = #{keywords,jdbcType=VARCHAR},
            </if>
            <if test="des != null">
                DES = #{des,jdbcType=VARCHAR},
            </if>
            <if test="showName != null">
                SHOW_NAME = #{showName,jdbcType=VARCHAR},
            </if>
            <if test="storeDes != null">
                STORE_DES = #{storeDes,jdbcType=VARCHAR},
            </if>
            <if test="headerDes != null">
                HEADER_DES = #{headerDes,jdbcType=VARCHAR},
            </if>
            <if test="hotSort != null">
                HOT_SORT = #{hotSort,jdbcType=INTEGER},
            </if>
            <if test="adviseSort != null">
                ADVISE_SORT = #{adviseSort,jdbcType=INTEGER},
            </if>
            <if test="visitCount != null">
                VISIT_COUNT = #{visitCount,jdbcType=INTEGER},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore">
		update CP_OUT_SITE_STORE
		set OUT_ID =
		#{outId,jdbcType=INTEGER},
		STORE_ID = #{storeId,jdbcType=INTEGER},
		CREATE_USER = #{createUser,jdbcType=INTEGER},
		UPDATE_USER =
		#{updateUser,jdbcType=INTEGER},
		CREATE_TIME =
		#{createTime,jdbcType=TIMESTAMP},
		UPDATE_TIME =
		#{updateTime,jdbcType=TIMESTAMP},
		STORE_COUNT =
		#{storeCount,jdbcType=INTEGER},
		COUPON_COUNT =
		#{couponCount,jdbcType=INTEGER},
		AD_ADDRESS =
		#{adAddress,jdbcType=VARCHAR},
		MARK = #{mark,jdbcType=VARCHAR},
		IS_MANUAL = #{isManual,jdbcType=VARCHAR},
		TITLE =
		#{title,jdbcType=VARCHAR},
		KEYWORDS = #{keywords,jdbcType=VARCHAR},
		DES
		= #{des,jdbcType=VARCHAR},
		SHOW_NAME = #{showName,jdbcType=VARCHAR},
		STORE_DES = #{storeDes,jdbcType=VARCHAR},
		HEADER_DES =
		#{headerDes,jdbcType=VARCHAR},
		HOT_SORT = #{hotSort,jdbcType=INTEGER},
		ADVISE_SORT = #{adviseSort,jdbcType=INTEGER}
		where ID =
		#{id,jdbcType=INTEGER}
	</update>

    <select id="getList"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CP_OUT_SITE_STORE
        <where>
            <if test="storeId != null and storeId>0">
                STORE_ID = #{storeId}
            </if>
            <if test="showName != null and showName!=''">
                SHOW_NAME like "%"#{showName}"%"
            </if>
            <if test="outId != null and outId >0">
                OUT_ID = #{outId}
            </if>
        </where>
    </select>

    <delete id="deleteByBean"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore">
        DELETE FROM CP_OUT_SITE_STORE
        <where>
            <if test="outId != null and outId > 0">
                OUT_ID = #{outId}
            </if>
            <if test="storeId != null and storeId > 0">
                AND STORE_ID = #{storeId}
            </if>
        </where>
    </delete>

    <update id="updateHotSort"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore">
		UPDATE CP_OUT_SITE_STORE
		SET
		UPDATE_TIME =
		#{updateTime,jdbcType=TIMESTAMP},
		HOT_SORT =
		#{hotSort,jdbcType=INTEGER}
		WHERE ID = #{id,jdbcType=INTEGER}
	</update>

    <update id="updateAdviseSort"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore">
        update CP_OUT_SITE_STORE
        SET
        UPDATE_TIME =
        #{updateTime,jdbcType=TIMESTAMP},
        ADVISE_SORT =
        #{adviseSort,jdbcType=INTEGER}
        where ID = #{id,jdbcType=INTEGER}
        <!-- where STORE_ID = #{storeId,jdbcType=INTEGER} -->
    </update>


    <select id="getHotStoreList"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CP_OUT_SITE_STORE
        <where>
            HOT_SORT=0 and
            OUT_ID = #{outId}
            <if test="showName != null and showName!=''">
                SHOW_NAME LIKE "%"#{showName}"%"
            </if>
        </where>
        LIMIT #{beginIndex},#{pageSize}
    </select>


    <select id="getHotStoreCount"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultType="java.lang.Integer">
        select
        count(*)
        from CP_OUT_SITE_STORE
        <where>
            HOT_SORT=0 and
            OUT_ID = #{outId}
            <if test="showName != null and showName!=''">
                SHOW_NAME LIKE "%"#{showName}"%"
            </if>
        </where>

    </select>

    <select id="getAdviseStroreList"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CP_OUT_SITE_STORE
        <where>
            ADVISE_SORT=0 and OUT_ID = #{outId}
            <if test="showName != null and showName!=''">
                SHOW_NAME LIKE "%"#{showName}"%"
            </if>
        </where>
        LIMIT #{beginIndex},#{pageSize}
    </select>


    <select id="getAdviseStroreCount"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultType="java.lang.Integer">
        select
        count(*)
        from CP_OUT_SITE_STORE
        <where>
            ADVISE_SORT=0 and OUT_ID = #{outId}
            <if test="showName != null and showName!=''">
                SHOW_NAME LIKE "%"#{showName}"%"
            </if>
        </where>

    </select>


    <select id="getTopHotStoreList"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CP_OUT_SITE_STORE

        <where>
            HOT_SORT <![CDATA[<>]]>
            0
            <if test="outId != null and outId>0">
                AND OUT_ID = #{outId}
            </if>
        </where>
        ORDER BY HOT_SORT ASC
    </select>


    <select id="getTopAdviseStroreList"
            parameterType="com.gopher.system.model.entity.CpOutSiteStore"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CP_OUT_SITE_STORE
        <where>
            ADVISE_SORT <![CDATA[<>]]>
            0
            <if test="outId != null and outId>0">
                AND OUT_ID = #{outId}
            </if>
        </where>
        ORDER BY ADVISE_SORT ASC
    </select>

    <select id="getTwoList"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultType="com.gopher.system.model.vo.CpOutSiteStoreVo">
        SELECT * FROM(
        SELECT
        OUTSTORE.ID id,
        OUTSTORE.ID outSiteId,
        STORE.ID storeId,
        STORE.NAME storeName,
        STORE.WEBSITE webSite,
        STORE.LOGO_URL logo,
        COUPON_COUNT_VALID couponCountValid,
        (SELECT COUNT(*) FROM CP_COUPON COU WHERE COU.STORE_ID = STORE.ID ) toalCount,
        (SELECT COUNT(*) FROM CP_COUPON COU WHERE COU.STORE_ID = STORE.ID AND EXPIRE_AT >=now()) validCount,
        OUTSTORE.VISIT_COUNT AS visitCount,
        date_format( OUTSTORE.CREATE_TIME, '%Y-%c-%d %h:%i:%s' ) addTime,
        (SELECT date_format( MAX(EXPIRE_AT), '%Y-%c-%d %h:%i:%s' ) FROM CP_COUPON WHERE STORE_ID = STORE.ID) endTime
        FROM
        <!-- 站点内部商家-->
        CP_OUT_SITE_STORE OUTSTORE
        LEFT JOIN
        <!-- 商家原始数据-->
        CP_STORE STORE ON OUTSTORE.STORE_ID=STORE.ID
        <if test="typeId != null and typeId >0 ">
            LEFT JOIN  CP_TYPE_STORE CTS ON CTS.STORE_ID = STORE.ID
        </if>
        <include refid="getTwoPageWhere"/>
        ORDER BY STORE.ID ASC
        ) TEMP
        <where>
            <if test="range != null and range >0 ">
                validCount &gt;= #{range}
            </if>
        </where>
        LIMIT #{beginIndex},#{pageSize}
    </select>

    <sql id="getTwoPageWhere">
        <where>
            OUTSTORE.OUT_ID = #{outId}
            <if test="search != null and search != '' ">
                AND (STORE.NAME LIKE "%"#{search}"%" OR STORE.WEBSITE
                LIKE
                "%"#{search}"%"
                )
            </if>
            <if test="country != null and country !=''">
                AND COUNTRY like "%"#{country}"%"
            </if>
            <if test="typeId != null and typeId >0 ">
                AND CTS.TYPE_ID = #{typeId}
            </if>
        </where>
    </sql>


    <select id="getTwoCount"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM (
        SELECT
        (SELECT COUNT(*) FROM CP_COUPON COU WHERE COU.STORE_ID=STORE.ID AND EXPIRE_AT >=now()) validCount
        FROM
        CP_OUT_SITE_STORE OUTSTORE
        LEFT JOIN
        CP_STORE STORE ON OUTSTORE.STORE_ID= STORE.ID
        <if test="typeId != null and typeId >0 ">
            LEFT JOIN  CP_TYPE_STORE CTS ON CTS.STORE_ID = STORE.ID
        </if>
        <include refid="getTwoPageWhere"/>
        )TEMP
        <where>
            <if test="range != null and range >0 ">
                validCount &gt;= #{range}
            </if>
        </where>
    </select>


    <select id="getCouponList"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultMap="BaseResultCountMap">
        SELECT
        <include refid="BaseCount_Column_List"/>
        FROM CP_COUPON COUPON WHERE COUPON.STORE_ID=#{storeId}
        LIMIT
        #{beginIndex},#{pageSize}

    </select>

    <select id="getCouponCount"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM CP_COUPON COUPON WHERE
		COUPON.STORE_ID=#{storeId}

	</select>


    <select id="getNewCouponList"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultMap="BaseResultCountMap">
        SELECT
        <include refid="BaseCount_Column_List"/>
        FROM CP_COUPON COUPON WHERE COUPON.STORE_ID=#{storeId} AND
        TO_DAYS(EXPIRE_AT) = TO_DAYS(NOW())
        LIMIT #{beginIndex},#{pageSize}

    </select>


    <select id="getNewCouponCount"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM CP_COUPON COUPON WHERE
		COUPON.STORE_ID=#{storeId} AND
		TO_DAYS(EXPIRE_AT) = TO_DAYS(NOW())


	</select>


    <select id="getInScrapy" parameterType="java.lang.Integer"
            resultType="java.lang.String">
		SELECT SCRAPY.NAME FROM CP_SCRAPY SCRAPY, CP_SCRAPY_STORE
		SSCRAPY WHERE
		SCRAPY.ID=SSCRAPY.SCRAPY_ID AND
		SSCRAPY.STORE_ID=#{storeId}

	</select>


    <select id="getValidCoupon"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultType="java.lang.Integer">
		SELECT COUNT(1) FROM CP_OUT_SITE_COUPON COSC
		INNER JOIN CP_COUPON CC ON COSC.COUPON_ID = CC.ID
		WHERE COSC.STORE_ID=#{storeId} AND
		CC.EXPIRE_AT <![CDATA[>=]]>
		NOW()
	</select>

    <select id="getToalCoupon"
            parameterType="com.gopher.system.model.vo.request.ShowSiteStoreRequest"
            resultType="java.lang.Integer">
		SELECT COUNT(1) FROM CP_OUT_SITE_COUPON COSC
		INNER JOIN CP_COUPON CC ON COSC.COUPON_ID = CC.ID
		WHERE
		COSC.STORE_ID=#{storeId}
	</select>

    <select id="getOne" parameterType="com.gopher.system.model.entity.CpOutSiteStore" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CP_OUT_SITE_STORE
        <where>
            <if test="outId !=null and outId !=''">
                OUT_ID = #{outId}
            </if>
            <if test="storeId !=null and storeId != '' ">
                AND STORE_ID = #{storeId}
            </if>
        </where>
        LIMIT 1
    </select>

    <update id="clearHotSort">
		UPDATE CP_OUT_SITE_STORE
		SET HOT_SORT = 0
		WHERE OUT_ID
		= #{outId}
		AND HOT_SORT > 0
	</update>

    <update id="clearAdviseSort">
		UPDATE CP_OUT_SITE_STORE
		SET ADVISE_SORT = 0
		WHERE
		OUT_ID = #{outId}
		AND ADVISE_SORT > 0
	</update>


</mapper>