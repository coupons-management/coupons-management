<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gopher.system.dao.mysql.UserDAO">
    <resultMap id="BaseResultMap" type="com.gopher.system.model.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="heard_img_url" jdbcType="VARCHAR" property="heardImgUrl"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_user" jdbcType="INTEGER" property="createUser"/>
        <result column="update_user" jdbcType="INTEGER" property="updateUser"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, `name`, gender, account, `password`, heard_img_url, age, create_time, update_time, 
    create_user, update_user
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from USER
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from USER
        where account = #{account,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from USER
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.gopher.system.model.entity.User"
            useGeneratedKeys="true">
    insert into USER (`name`, gender, account, 
      `password`, heard_img_url, age, 
      create_time, update_time, create_user, 
      update_user)
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{heardImgUrl,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateUser,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.gopher.system.model.entity.User"
            useGeneratedKeys="true">
        insert into USER
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="heardImgUrl != null">
                heard_img_url,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="heardImgUrl != null">
                #{heardImgUrl,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.gopher.system.model.entity.User">
        update USER
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="heardImgUrl != null">
                heard_img_url = #{heardImgUrl,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.gopher.system.model.entity.User">
    update USER
    set `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      account = #{account,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      heard_img_url = #{heardImgUrl,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <sql id="page_where">
        <where>
            <if test="name != null and name!=''">
                name LIKE "%"#{name}"%"
            </if>
            <if test="account != null and account!=''">
                AND account LIKE "%"#{account}"%"
            </if>
        </where>

    </sql>


    <select id="selectPage" parameterType="com.gopher.system.model.vo.request.UserPageRequst" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM USER
        <include refid="page_where"/>
        ORDER BY create_time
        limit #{beginIndex},#{pageSize}
    </select>

    <select id="getCount" parameterType="com.gopher.system.model.vo.request.UserPageRequst"
            resultType="java.lang.Integer">
        SELECT COUNT(1) FROM
        USER
        <include refid="page_where"/>
    </select>

    <insert id="addAccount" parameterType="com.gopher.system.model.entity.User" useGeneratedKeys="true"
            keyProperty="id">
    INSERT INTO
    USER (`name`,gender,account,`password`,age,create_user,create_time)
    VALUES (#{name},#{gender},#{account},#{password},#{age},#{createUser},#{createTime})
  </insert>
    <delete id="deleteUserStore" parameterType="java.lang.Integer">
    DELETE FROM USER_STORE
    WHERE USER_ID = #{id}
  </delete>

    <delete id="deleteUserRole" parameterType="java.lang.Integer">
    DELETE FROM USER_ROLE
    WHERE USER_ID = #{id}
  </delete>

    <delete id="cancelUserStore" parameterType="com.gopher.system.model.vo.request.UserAssignOrCancelStoreRequest">
        DELETE FROM USER_STORE
        WHERE USER_ID = #{userId}
        AND STORE_ID= #{storeId}
    </delete>


    <insert id="assignStore" parameterType="com.gopher.system.model.vo.request.UserAssignStoreRequest">
        INSERT INTO
        USER_STORE (USER_ID,STORE_ID)
        VALUES
        <foreach collection="param.stores" item="store" separator=",">
            (#{param.userId},#{store})
        </foreach>
    </insert>

    <insert id="assignStoreToUser" parameterType="com.gopher.system.model.vo.request.UserAssignOrCancelStoreRequest">
        INSERT INTO
        USER_STORE (USER_ID,STORE_ID)
        VALUES
        (#{userId},#{storeId})
    </insert>

    <select id="assignedCount" parameterType="java.util.List" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        USER_STORE
        WHERE
        STORE_ID IN
        <foreach collection="stores" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <insert id="assignRole" parameterType="com.gopher.system.model.vo.request.UserAssigRoleRequest">

        INSERT INTO
        USER_ROLE (USER_ID,ROLE_ID)
        VALUES
        <foreach collection="param.roles" item="role" separator=",">
            (#{param.userId},#{role})
        </foreach>
    </insert>


    <select id="userRole" parameterType="java.lang.Integer" resultType="com.gopher.system.model.entity.Role">
    SELECT
    DISTINCT r.*
    FROM
    ROLE r
    INNER JOIN
    USER_ROLE ur
    ON
    r.ID = ur.ROLE_ID
    WHERE
    ur.USER_ID=#{userId}
  </select>

    <select id="userStore" parameterType="com.gopher.system.model.vo.request.UserStoreRequest"
            resultType="com.gopher.system.model.entity.CpStore">
        SELECT
        DISTINCT cs.*
        FROM
        CP_STORE cs
        <choose>
            <when test="userId !=null and userId !=''">
                INNER JOIN
                USER_STORE us
                ON
                cs.ID=us.STORE_ID
                WHERE us.USER_ID=#{userId}
                <if test="name != null and name!=''">
                    AND cs.NAME LIKE "%"#{name}"%"
                </if>
            </when>
            <otherwise>
                <where>
                    <if test="name != null and name!=''">
                        cs.NAME LIKE "%"#{name}"%"
                    </if>
                </where>
            </otherwise>
        </choose>
        ORDER BY cs.CREATE_TIME DESC
        limit #{beginIndex},#{pageSize}
    </select>

    <select id="userStoreCount" parameterType="com.gopher.system.model.vo.request.UserStoreRequest"
            resultType="java.lang.Integer">
        SELECT
        COUNT(DISTINCT cs.ID)
        FROM
        CP_STORE cs
        <choose>
            <when test="userId !=null and userId !=''">
                INNER JOIN
                USER_STORE us
                ON
                cs.ID=us.STORE_ID
                WHERE us.USER_ID=#{userId}
                <if test="name != null and name!=''">
                    AND cs.NAME LIKE "%"#{name}"%"
                </if>
            </when>
            <otherwise>
                <where>
                    <if test="name != null and name!=''">
                        cs.NAME LIKE "%"#{name}"%"
                    </if>
                </where>
            </otherwise>
        </choose>
    </select>

</mapper>