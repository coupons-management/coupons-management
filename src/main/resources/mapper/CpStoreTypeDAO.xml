<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gopher.system.dao.mysql.CpStoreTypeDAO">
  <resultMap id="BaseResultMap" type="com.gopher.system.model.CpStoreType">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="STORE_ID" jdbcType="VARCHAR" property="storeId" />
    <result column="TYPE_ID" jdbcType="VARCHAR" property="typeId" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, STORE_ID, TYPE_ID, CREATE_USER, UPDATE_USER, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CP_STORE_TYPE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from CP_STORE_TYPE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="com.gopher.system.model.CpStoreType" useGeneratedKeys="true">
    insert into CP_STORE_TYPE (STORE_ID, TYPE_ID, CREATE_USER, 
      UPDATE_USER, CREATE_TIME, UPDATE_TIME
      )
    values (#{storeId,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="com.gopher.system.model.CpStoreType" useGeneratedKeys="true">
    insert into CP_STORE_TYPE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storeId != null">
        STORE_ID,
      </if>
      <if test="typeId != null">
        TYPE_ID,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storeId != null">
        #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gopher.system.model.CpStoreType">
    update CP_STORE_TYPE
    <set>
      <if test="storeId != null">
        STORE_ID = #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        TYPE_ID = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gopher.system.model.CpStoreType">
    update CP_STORE_TYPE
    set STORE_ID = #{storeId,jdbcType=VARCHAR},
      TYPE_ID = #{typeId,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>